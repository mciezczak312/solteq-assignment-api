{
  "swagger": "2.0",
  "info": {
    "description": "",
    "version": "1.0.0",
    "title": "EMS"
  },
  "host": "http://solteq-assignment.mciezczak.pl:9000",
  "basePath": "/api",
  "tags": [
    {
      "name": "Employees",
      "description": "Employees endpoints"
    },
    {
      "name": "Stats",
      "description": "Access to employees statistics like average salary"
    },
    {
      "name": "User",
      "description": "Authentication endpoint"
    }
  ],
  "schemes": [
    "http"
  ],
  "components": null,
  "securitySchemes": {
    "bearerAuth": {
      "type": "http",
      "scheme": "bearer",
      "bearerFormat": "JWT"
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/employee/{employeeId}": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Find employee by ID",
        "description": "Returns a single employee object",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of employee to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Employee not found"
          }
        }
      },
      "post": {
        "tags": [
          "Employees"
        ],
        "summary": "Add a new employee to the database",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Employee object that needs to be added to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Employee added"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "put": {
        "tags": [
          "Employees"
        ],
        "summary": "Update an existing employee",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Employee object that needs to be updated to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Employee not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Employees"
        ],
        "summary": "Deletes a employee",
        "description": "",
        "operationId": "deletePet",
        "produces": [
          "application/json"
        ],
        "responses": {
          "404": {
            "description": "Pet not found"
          }
        }
      }
    },
    "/employee/search": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Search for employee",
        "description": "Allows to execute search on database based on employees firstname, lastname, email",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Search term",
            "required": false,
            "type": "string"
          },
          {
            "name": "take",
            "in": "query",
            "description": "Page size",
            "required": false,
            "type": "integer"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of rows to skip",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Column name to order by eg firstName;ASC",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EmployeeSearch"
            }
          },
          "404": {
            "description": "Employee not found"
          }
        }
      }
    },
    "/user/auth": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Authorize the user",
        "description": "After successfull authorization returns a jwt token whitch is used in subsequent calls to API",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Credentials object containing username and password",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Credentials"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            }
          },
          "401": {
            "description": "wrong password or username"
          }
        }
      }
    },
    "/stats/avgSalary": {
      "get": {
        "tags": [
          "Stats"
        ],
        "summary": "Average months salary",
        "description": "Returns a object containing list of avg salaries in each months",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AvgSalaryResponse"
            }
          }
        }
      }
    },
    "/stats/employees": {
      "get": {
        "tags": [
          "Stats"
        ],
        "summary": "Informations about employees",
        "description": "Return object with avg salary for current month and number of all employees",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EmployeesStatsResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "EmployeesStatsResponse": {
      "type": "object",
      "properties": {
        "averageCurrentSalary": {
          "type": "number"
        },
        "employeesCount": {
          "type": "number"
        }
      }
    },
    "AvgSalaryResponse": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "amount": {
                "type": "number"
              },
              "monthName": {
                "type": "string"
              },
              "year": {
                "type": "number"
              }
            }
          }
        }
      }
    },
    "Credentials": {
      "type": "object",
      "properties": {
        "UserName": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        }
      }
    },
    "AuthResponse": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "EmployeeSearch": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "currentSalary": {
            "type": "number"
          },
          "positionsNames": {
            "type": "string"
          }
        }
      }
    },
    "Employee": {
      "type": "object",
      "items": ""
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}